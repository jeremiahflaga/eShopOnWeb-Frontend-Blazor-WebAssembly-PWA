# eShopOnWeb-Frontend-Blazor-WebAssembly

A sample frontend project for eShopOnWeb (https://github.com/dotnet-architecture/eShopOnWeb) using Blazor WebAssembly PWA


## Step 1.1 - Download `eShopOnWeb` project and checkout the branch named `public-api-for-basket`

```
git clone https://github.com/jeremiahflaga/eShopOnWeb.git
``` 

```
cd eShopOnWeb
```

```
git checkout public-api-for-basket
```


### Step 1.2 - Be sure to `AllowAnyOrigin()` in CORS in the backend API

Open eShopOnWeb in Visual Studio 2019 then edit the file `\eShopOnWeb\src\PublicApi\Startup.cs` to `AllowAnyOrigin()` for CORS of the backend API:

``` csharp
services.AddCors(options =>
{
    options.AddPolicy(name: CORS_POLICY,
                      builder =>
                      {
                          //builder.WithOrigins(baseUrlConfig.WebBase.Replace("host.docker.internal", "localhost").TrimEnd('/'));
                          builder.AllowAnyOrigin();
                          builder.AllowAnyMethod();
                          builder.AllowAnyHeader();
                      });
});
```

... or else you will encounter the `Children could not be evaluated` error.


### Step 1.3

Set the Startup project to the `docker-compose` project in Visual Studio 2019.

Then **run using Docker** so that the backend API and the Web projects of eShopOnWeb will both start, and so that the URLs will match the ones being used in `wwwrot/appsettings.json` of the Blazor project

-- OR run `docker-compose up` on the command line --

Be sure that the API is running on port **5200** (`http://localhost:5200/`)


## Step 2: Open `eShopOnWeb-frontend-blazor-webassembly` in Visual Studio 2019 then run it

Set `BlazorWebAssemblyApp` as startup project in Visual Studio 2019 then run it.

NOTE: The URL for API is set in the file `\eShopOnWeb-frontend-blazor-webassembly\src\BlazorWebAssemblyApp\wwwroot\appsettings.json`. Be sure that the setting `apiUrl` is set to `http://localhost:5200/`





## References:

- [Blazor WebAssembly - JWT Authentication Example & Tutorial](https://jasonwatmore.com/post/2020/08/13/blazor-webassembly-jwt-authentication-example-tutorial) by Jason Watmore

- [Named HttpClient with IHttpClientFactory](https://docs.microsoft.com/en-us/aspnet/core/blazor/call-web-api?view=aspnetcore-3.1#named-httpclient-with-ihttpclientfactory)

- [DevOps Blazor WebAssembly Solution: Part 4 - End to End UI Test](https://dev.to/kenakamu/devops-blazor-webassembly-solution-part-4-end-to-end-ui-test-1b3g)

- [If you need to create a cookie, you must use JsInterop, more details here How do I create a cookie client side using blazor.](https://stackoverflow.com/questions/63831943/httpclient-doesnt-include-cookies-with-requests-in-blazor-webassembly-app)

- [Blazor Write to LocalStorage](https://wellsb.com/csharp/aspnet/blazor-write-to-localstorage/)


## Errors encountered:

Error: Cannot access login page, `https://localhost:44316/login`

Solution: Clear browser data (perhaps there are some bugs in Blazor that will be fixed later)
