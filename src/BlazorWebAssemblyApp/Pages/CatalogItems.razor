@page "/catalog-items"
@inject ICatalogService catalogService
@inject IConfiguration Configuration

@if (pagedCatalogItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @*<partial name="_pagination" for="CatalogModel.PaginationInfo" />*@

    <div class="container">
        <div>
            @foreach (var catalogItem in pagedCatalogItems.CatalogItems)
            {
                <div class="col-md-4">
                    <form asp-page="/Basket/Index" method="post">
                        <img class="esh-catalog-thumbnail" src="@($"{Configuration["webUrl"]}/{catalogItem.PictureUri}")" />
                        <input class="esh-catalog-button" type="submit" value="[ ADD TO BASKET ]" />
                        <div class="esh-catalog-name">
                            <span>@catalogItem.Name</span>
                        </div>
                        <div class="esh-catalog-price">
                            <span>@catalogItem.Price.ToString("N2")</span>
                        </div>
                        <input type="hidden" asp-for="@catalogItem.Id" name="id" />
                        <input type="hidden" asp-for="@catalogItem.Name" name="name" />
                        <input type="hidden" asp-for="@catalogItem.PictureUri" name="pictureUri" />
                        <input type="hidden" asp-for="@catalogItem.Price" name="price" />
                    </form>
                </div>
            }
        </div>
    </div>
    @*<partial name="_pagination" for="CatalogModel.PaginationInfo" />*@
}

@code {
private ListPagedCatalogItemResponse pagedCatalogItems;

protected override async Task OnInitializedAsync()
{
    pagedCatalogItems = await catalogService.ListPagedCatalogItemsAsync();
}
}
